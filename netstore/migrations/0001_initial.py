# Generated by Django 2.1.7 on 2019-03-07 02:34

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AddressList',
            fields=[
                ('address_id', models.CharField(max_length=50, primary_key=True, serialize=False)),
                ('address_name', models.CharField(blank=True, max_length=50, null=True)),
                ('address_level', models.CharField(blank=True, max_length=50, null=True)),
            ],
            options={
                'db_table': 'address_list',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=80, unique=True)),
            ],
            options={
                'db_table': 'auth_group',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthGroupPermissions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'auth_group_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthPermission',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('codename', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'auth_permission',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128)),
                ('last_login', models.DateTimeField(blank=True, null=True)),
                ('is_superuser', models.BooleanField()),
                ('username', models.CharField(max_length=150, unique=True)),
                ('first_name', models.CharField(max_length=30)),
                ('last_name', models.CharField(max_length=150)),
                ('email', models.CharField(max_length=254)),
                ('is_staff', models.BooleanField()),
                ('is_active', models.BooleanField()),
                ('date_joined', models.DateTimeField()),
            ],
            options={
                'db_table': 'auth_user',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserGroups',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'auth_user_groups',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserUserPermissions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'auth_user_user_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoAdminLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action_time', models.DateTimeField()),
                ('object_id', models.TextField(blank=True, null=True)),
                ('object_repr', models.CharField(max_length=200)),
                ('action_flag', models.SmallIntegerField()),
                ('change_message', models.TextField()),
            ],
            options={
                'db_table': 'django_admin_log',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoContentType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app_label', models.CharField(max_length=100)),
                ('model', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'django_content_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoMigrations',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app', models.CharField(max_length=255)),
                ('name', models.CharField(max_length=255)),
                ('applied', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_migrations',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoSession',
            fields=[
                ('session_key', models.CharField(max_length=40, primary_key=True, serialize=False)),
                ('session_data', models.TextField()),
                ('expire_date', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_session',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='NetstoreGoods',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('price', models.FloatField()),
                ('picture', models.CharField(max_length=100)),
                ('desc', models.TextField()),
            ],
            options={
                'db_table': 'netstore_goods',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='NetstoreUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.CharField(max_length=50)),
                ('password', models.CharField(max_length=50)),
                ('email', models.CharField(max_length=254)),
            ],
            options={
                'db_table': 'netstore_user',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Sysdiagrams',
            fields=[
                ('name', models.CharField(max_length=128)),
                ('principal_id', models.IntegerField()),
                ('diagram_id', models.AutoField(primary_key=True, serialize=False)),
                ('version', models.IntegerField(blank=True, null=True)),
                ('definition', models.BinaryField(blank=True, null=True)),
            ],
            options={
                'db_table': 'sysdiagrams',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TbAdmin',
            fields=[
                ('admin_id', models.AutoField(primary_key=True, serialize=False)),
                ('admin_name', models.CharField(max_length=50)),
                ('admin_password', models.CharField(blank=True, max_length=50, null=True)),
            ],
            options={
                'db_table': 'tb_admin',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TbBookinfo',
            fields=[
                ('bookid', models.IntegerField(db_column='BookID', primary_key=True, serialize=False)),
                ('bookname', models.CharField(db_column='BookName', max_length=50)),
                ('bookintroduce', models.TextField(db_column='BookIntroduce')),
                ('author', models.CharField(db_column='Author', max_length=50)),
                ('company', models.CharField(db_column='Company', max_length=50)),
                ('bookurl', models.CharField(db_column='BookUrl', max_length=200)),
                ('marketprice', models.FloatField(db_column='MarketPrice')),
                ('hotprice', models.FloatField(db_column='HotPrice')),
                ('isrefinment', models.BooleanField(db_column='Isrefinment')),
                ('ishot', models.BooleanField(db_column='IsHot')),
                ('isdiscount', models.BooleanField(db_column='IsDiscount')),
                ('loaddate', models.DateTimeField(db_column='LoadDate')),
            ],
            options={
                'db_table': 'tb_BookInfo',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TbClass',
            fields=[
                ('classid', models.IntegerField(db_column='ClassID', primary_key=True, serialize=False)),
                ('classname', models.CharField(db_column='ClassName', max_length=50)),
                ('categoryurl', models.CharField(db_column='CategoryUrl', max_length=50)),
            ],
            options={
                'db_table': 'tb_Class',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TbDetail',
            fields=[
                ('detailid', models.IntegerField(db_column='DetailID', primary_key=True, serialize=False)),
                ('num', models.IntegerField(db_column='Num')),
                ('totalprice', models.FloatField(db_column='TotalPrice')),
                ('remark', models.CharField(db_column='Remark', max_length=200)),
            ],
            options={
                'db_table': 'tb_detail',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TbImage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('imageid', models.IntegerField(db_column='ImageID')),
                ('imagename', models.CharField(db_column='ImageName', max_length=50)),
                ('imageurl', models.CharField(db_column='ImageUrl', max_length=200)),
            ],
            options={
                'db_table': 'tb_image',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TbMember',
            fields=[
                ('memberid', models.IntegerField(db_column='MemberID', primary_key=True, serialize=False)),
                ('username', models.CharField(db_column='UserName', max_length=50)),
                ('password', models.CharField(db_column='Password', max_length=50)),
                ('realname', models.CharField(blank=True, db_column='RealName', max_length=50, null=True)),
                ('sex', models.BooleanField(blank=True, db_column='Sex', null=True)),
                ('phonecode', models.CharField(blank=True, db_column='Phonecode', max_length=20, null=True)),
                ('email', models.CharField(db_column='Email', max_length=50)),
                ('memberlevel', models.IntegerField()),
                ('address_sheng', models.CharField(blank=True, db_column='Address_sheng', max_length=200, null=True)),
                ('address_shi', models.CharField(blank=True, db_column='Address_shi', max_length=50, null=True)),
                ('address_quxian', models.CharField(blank=True, db_column='Address_quxian', max_length=50, null=True)),
                ('address_detail', models.CharField(blank=True, db_column='Address_detail', max_length=200, null=True)),
                ('postcode', models.CharField(blank=True, db_column='PostCode', max_length=10, null=True)),
                ('loaddate', models.DateTimeField(blank=True, db_column='LoadDate', null=True)),
            ],
            options={
                'db_table': 'tb_Member',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TbOrderinfo',
            fields=[
                ('orderid', models.IntegerField(db_column='OrderID', primary_key=True, serialize=False)),
                ('orderdate', models.DateTimeField(db_column='OrderDate')),
                ('booksfee', models.FloatField(db_column='BooksFee')),
                ('shipfee', models.FloatField(db_column='ShipFee')),
                ('totalprice', models.FloatField(db_column='TotalPrice')),
                ('shiptype', models.CharField(db_column='ShipType', max_length=50)),
                ('receivername', models.CharField(db_column='ReceiverName', max_length=50)),
                ('receiverphone', models.CharField(db_column='ReceiverPhone', max_length=20)),
                ('receiveraddress', models.CharField(db_column='ReceiverAddress', max_length=200)),
                ('receiveremail', models.CharField(db_column='ReceiverEmail', max_length=50)),
                ('isconfirm', models.BooleanField(db_column='IsConfirm')),
                ('issend', models.BooleanField(db_column='IsSend')),
                ('isend', models.BooleanField(db_column='IsEnd')),
                ('adminid', models.BooleanField(blank=True, db_column='AdminID', null=True)),
                ('confirmtime', models.DateTimeField(blank=True, db_column='ConfirmTime', null=True)),
                ('receiverpostcode', models.CharField(db_column='ReceiverPostCode', max_length=10)),
            ],
            options={
                'db_table': 'tb_OrderInfo',
                'managed': False,
            },
        ),
    ]
